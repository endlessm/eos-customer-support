#!/bin/bash -e

# Upgrade from eos2 to eos3

# Removes all installed legacy app bundles,
# points to the latest ostree branches,
# and starts the ostree upgrade process.
# Requires the user to re-install any desired
# apps as flatpaks from the app center
# after rebooting into eos3.

ARGS=$(getopt -o fsh -l "force,skip,help" -n "$0" -- "$@")
eval set -- "$ARGS"

usage() {
    cat <<EOF
Remove all legacy apps and upgrade from eos2 to eos3
Usage:
   $0
Options:
   -f,--force	don't ask for confirmation
   -s,--skip    skip the final step to actually perform the ostree upgrade
   -h,--help	show this message
EOF
}

FORCE=false
SKIP=false
while true; do
    case "$1" in
        -f|--force)
            FORCE=true
            shift
            ;;
        -s|--skip)
            SKIP=true
            exit 0
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        --)
            shift
            break
            ;;
    esac
done

USERID=$(id -u)
if [ "$USERID" != "0" ]; then
    echo "Program requires superuser privileges"
    exit 1
fi

LATEST_VERSION=2.6.10
version=`grep VERSION= /etc/os-release | awk -F '"' '{print $2}'`
major_version=`echo ${version} | awk -F '.' '{print $1}'`

if [ ${version} != ${LATEST_VERSION} ]; then
    echo "This script only works with Endless OS version ${LATEST_VERSION}"
    if [ ${major_version} == 2 ]; then
	echo "Please update the OS and try again"
    elif [ ${major_version} == 3 ]; then
	echo "You already are running Endless OS version 3"
    else
	echo "You are running an unsupported version: ${version}"
    fi
    exit 1
fi

if ! $FORCE; then
    echo
    echo "You are about to upgrade Endless OS from version 2 to version 3."
    echo
    echo "Endless OS 3 uses a new technology for applications called flatpak,"
    echo "which is a standard format for deploying Linux applications that enables"
    echo "Endless to run applications distributed by other development teams."
    echo
    echo "The legacy application format is no longer supported, and the first step"
    echo "of the upgrade process is to remove all installed application bundles."
    echo "Then, roughly a gigabyte of data will be downloaded from the internet,"
    echo "which may take a long time and incur data charges depending on your"
    echo "internet connection and contract with your provider."
    echo
    echo "In the meantime, while downloading Endless OS 3, you may continue"
    echo "to use Endless OS 2 and some of the core applications such as"
    echo "the internet browser and office applications."
    echo "Once the upgrade to Endless OS 3 is downloaded and ready, you will be"
    echo "asked to reboot, and then you will be able to install new flatpak apps"
    echo "from the Endless OS 3 app center."
    echo
    echo "Once the download completes, it will take several additional minutes"
    echo "for the deployment to complete -- please be patient and wait until"
    echo "you see the 'Upgrade complete!' message."
    echo
    read -p "Are you sure you want to remove all legacy app bundles and proceed? [y/N] "
    response=${REPLY,,} # to lower
    if [[ ! $response =~ ^(yes|y)$ ]]; then
        exit 1
    fi
fi

# Stop any updates in progress
killall ostree-daemon || true
killall eos-updater || true

# For older installs (eos2.3.x and earlier), we had a separate boot
# partition which we no longer support on eos3
if [ ! "$(ls -A /sysroot/boot)" ]; then
    echo "Migrating separate boot partition into main partition"
    # Get the boot partition (e.g., /dev/sda1 or /dev/mmcblk0p1)
    boot_part=`mount | grep /boot | awk '{print $1}'`
    # Extract the device name (e.g., /dev/sda or /dev/mmblk0)
    boot_dev=`echo $boot_part | sed 's/p*[0-9]\+$//'`
    # Copy the contents from /boot to the main partition
    cp -a /boot/* /sysroot/boot
    # Manually unmount the boot partition
    umount /boot
    # Re-install the bootloader, telling it to look for config files
    # in the main partition
    grub-install --boot-directory=/sysroot/boot --modules="ext2 part_msdos part_gpt" --directory=/usr/lib/grub/i386-pc $boot_dev
    sync
    # Remove the old boot partition
    sfdisk --dump $boot_dev | grep -v $boot_part | sfdisk --force $boot_dev
    # Bind-mount /boot as required by ostree (normally would happen on reboot)
    mount -o bind /sysroot/boot /boot
fi

# Attempt a clean uninstall of all installed apps
for app in `eamctl list-apps`
do
    echo Uninstalling $app
    eamctl uninstall $app || true
done

# Forcibly cleanup the app installation directories,
# just in case anything useless was left behind
rm -rf /var/endless || true
rm -rf /var/endless-extra/* || true

# Remove any existing subscriptions app data for all users
for user in `ls /home`
do
    rm -rf /home/$user/.local/share/com.endlessm.subscriptions || true
done

# Remove the Flash/Widevine plugin version file to force an update
# from 32-bit to 64-bit upon reboot (but leave the actual plugins
# intact for continued use while the upgrade is downloading)
rm -f /var/lib/chromium-plugins-extra/eos-chrome-plugin-updater/VERSION.txt

# TODO For split disk images, create the flatpak directory
# on the secondary storage
# mkdir /var/endless-extra/flatpak || true

# Figure out the architecture / product
machine=`uname -m`
case "$machine" in
    armv7l)
	arch=armhf
	prod=ec100
	;;
    x86_64)
	arch=amd64
	prod=amd64
	;;
    *)
        echo Unexpected machine architecture $machine
        exit 1
	;;
esac

# Set up the ostree and flatpak repo config
# TODO Adapt to support split disk images
cat <<EOF > /ostree/repo/config
[core]
repo_version=1
mode=bare

[remote "eos"]
url=https://ostree.endlessm.com/ostree/eos-$arch
branches=os/eos/$prod/eos3;
xa.disable=true

[remote "eos-runtimes"]
gpg-verify=true
gpg-verify-summary=true
url=https://ostree.endlessm.com/ostree/eos-$arch

[remote "eos-apps"]
gpg-verify=true
gpg-verify-summary=true
url=https://ostree.endlessm.com/ostree/eos-apps

[remote "eos-external-apps"]
gpg-verify=false
gpg-verify-summary=false
url=file:///var/lib/flatpak-external-apps
EOF

# Set the default branch for the flatpak repo
mkdir -p /etc/gnome-software
cat <<EOF > /etc/gnome-software/flatpak-extra.conf
[remote:eos-apps]
default-branch=eos3
EOF

# Change the refspec for the currently deployed ostree
deployment=`ostree admin status | grep '* eos' | awk -F ' ' '{print $3}'`
cat <<EOF > /ostree/deploy/eos/deploy/$deployment.origin
[origin]
refspec=eos:os/eos/$prod/eos3
EOF

if ! $SKIP; then
    # Perform the ostree upgrade
    ostree admin upgrade

    # All done
    echo "Upgrade complete! Please reboot the computer to start using Endless OS 3"
fi
